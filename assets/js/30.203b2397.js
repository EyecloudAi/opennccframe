(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{296:function(t,s,n){"use strict";n.r(s);var a=n(13),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"how-to-write-json-config-to-match-your-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-write-json-config-to-match-your-model"}},[t._v("#")]),t._v(" How to write json config to match your model")]),t._v(" "),s("p",[t._v("The json config is an important file to help you run model on NCC.")]),t._v(" "),s("h3",{attrs:{id:"nccvideoconvert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nccvideoconvert"}},[t._v("#")]),t._v(" nccVideoConvert")]),t._v(" "),s("p",[t._v("This plug-in help you convert video or image data to tensor.")]),t._v(" "),s("p",[s("strong",[t._v("Parameters:")])]),t._v(" "),s("p",[s("code",[t._v("enabled")]),t._v(" - Flag to enable plug-in")]),t._v(" "),s("p",[s("code",[t._v("linkIn")]),t._v('  - Choose input source. (["input"]: external input by USB. ["camera"]: internal input from camera of NCC.)')]),t._v(" "),s("p",[s("code",[t._v("inputTensor")]),t._v(" - Shape of input source. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),s("p",[s("code",[t._v("inputType")]),t._v(' - Format of input source. Option: "bgr_planar_u8", "YUV420"')]),t._v(" "),s("p",[s("code",[t._v("ROI")]),t._v(" - Region of interest. Such as: [Start_X, Start_Y, End_X, End_Y]")]),t._v(" "),s("p",[s("code",[t._v("meanValue")]),t._v(" - "),s("em",[t._v("No description available")])]),t._v(" "),s("p",[s("code",[t._v("stdValue")]),t._v(" - "),s("em",[t._v("No description available")])]),t._v(" "),s("p",[s("code",[t._v("outputTensor")]),t._v("  - Shape of output tensor. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),s("p",[s("code",[t._v("outputType")]),t._v(" -  Format of output tensor.")]),t._v(" "),s("p",[s("code",[t._v("linkOut")]),t._v(" - next plug-in")]),t._v(" "),s("h3",{attrs:{id:"nccinference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nccinference"}},[t._v("#")]),t._v(" nccInference")]),t._v(" "),s("p",[t._v("This plug-in help you to inference model on NCC.")]),t._v(" "),s("p",[s("strong",[t._v("Parameters:")])]),t._v(" "),s("p",[s("code",[t._v("enabled")]),t._v(" - Flag to enable plug-in")]),t._v(" "),s("p",[s("code",[t._v("linkIn")]),t._v("  - last plug-in")]),t._v(" "),s("p",[s("code",[t._v("inputTensor")]),t._v(" - Shape of input source. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),s("p",[s("code",[t._v("inputType")]),t._v(' - Format of input source. Option: "BGR_PLANAR_FP16"')]),t._v(" "),s("p",[s("code",[t._v("extInputs1")]),t._v("- "),s("em",[t._v("No description available")])]),t._v(" "),s("p",[s("code",[t._v("extInputs2")]),t._v("- "),s("em",[t._v("No description available")])]),t._v(" "),s("p",[s("code",[t._v("extInputs3")]),t._v("- "),s("em",[t._v("No description available")])]),t._v(" "),s("p",[s("code",[t._v("outputTensor")]),t._v(" - Shape of output tensor. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),s("p",[s("code",[t._v("outputType")]),t._v(' - Format of output tensor. Option: "CV_FP16"')]),t._v(" "),s("p",[s("code",[t._v("linkOut")]),t._v(" - next plug-in")]),t._v(" "),s("h3",{attrs:{id:"ncctensorconvert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ncctensorconvert"}},[t._v("#")]),t._v(" nccTensorConvert")]),t._v(" "),s("p",[t._v("This plug-in help you to convert format of tensor.")]),t._v(" "),s("p",[s("strong",[t._v("Parameters:")])]),t._v(" "),s("p",[s("code",[t._v("enabled")]),t._v(" - Flag to enable plug-in")]),t._v(" "),s("p",[s("code",[t._v("linkIn")]),t._v("  - last plug-in")]),t._v(" "),s("p",[s("code",[t._v("inputTensor")]),t._v(" - Shape of input source. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),s("p",[s("code",[t._v("inputType")]),t._v(' - Format of input source. Option: "CV_FP16"')]),t._v(" "),s("p",[s("code",[t._v("outputTensor")]),t._v(" - Shape of output tensor. Such as: [batch size, number of channels, image height , image width]")]),t._v(" "),s("p",[s("code",[t._v("outputType")]),t._v(' - Format of output tensor. Option: "CV_FP32"')]),t._v(" "),s("p",[s("code",[t._v("linkOut")]),t._v(" - next plug-in or output")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("In model_zoo, we have provided some reference config for you to run example quickly.")])]),t._v(" "),s("p",[t._v("Template is as following:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"blob"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<model name>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Function"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This template is used to help you create config with your model."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nccVideoConvert"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkIn"')]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<source>:[input,camera]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputTensor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<source>:[bgr_planar_u8,YUV420]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ROI"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Start_X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Start_Y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" End_X"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" End_Y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"meanValue"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stdValue"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputTensor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BGR_PLANAR_FP16"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkOut"')]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccInference"')]),t._v("       \n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nccInference"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkIn"')]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccVideoConvert"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputTensor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("C"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("H"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("W"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BGR_PLANAR_FP16"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extInputs1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extInputs2"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extInputs3"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputTensor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CV_FP16"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkOut"')]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccTensorConvert"')]),t._v("     \n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nccTensorConvert"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enabled"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkIn"')]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nccInference"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputTensor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"inputType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CV_FP16"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputTensor"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outputType"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CV_FP32"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   \n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linkOut"')]),t._v("     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"output"')]),t._v("   \n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);